/*
Note : This Questiton is Similar to Q-15
*/

//Bruteforce Approach

class Solution {
    public static void countXorParityPairs(int[] arr) {
        int evenXorPairs = 0, oddXorPairs = 0;

        for (int i = 0; i < arr.length; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                int xorResult = arr[i] ^ arr[j];
                if (xorResult % 2 == 0) {
                    evenXorPairs++;
                } else {
                    oddXorPairs++;
                }
            }
        }

        System.out.println("Count of Pairs with Even XOR = " + evenXorPairs);
        System.out.println("Count of Pairs with Odd XOR = " + oddXorPairs);
    }
}


/* Optimal Approach

=>Even XOR
  
Even Element + Even Element =Even XOR
Odd Element + Odd Element =Even XOR
  
=>Odd Sum
  
Even Element + Odd Element =Odd XOR
*/

class Solution {
    public static void countXorPairs(int[] numbers) {
        int evenNumbers = 0;

        // Count the number of even elements
        for (int number : numbers) {
            if (number % 2 == 0) {
                evenNumbers++;
            }
        }

        int oddNumbers = numbers.length - evenNumbers;

        // Calculate the number of pairs with even XOR
        int evenXorPairs = (evenNumbers * (evenNumbers - 1)) / 2 + (oddNumbers * (oddNumbers - 1)) / 2;

        // Calculate the number of pairs with odd XOR
        int oddXorPairs = evenNumbers * oddNumbers;

        System.out.println("Count of Pairs With Even XOR = " + evenXorPairs);
        System.out.println("Count of Pairs With Odd XOR = " + oddXorPairs);
    }
}
